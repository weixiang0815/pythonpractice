# -*- coding: utf-8 -*-
"""
Created on Wed Jun 12 06:32:19 2019

@author: 俊男
"""

# In[] Import
import numpy as np

# In[] Create Array
ary1 = np.array([1, 2, 3])
print(ary1)

ary2 = np.array([[1, 2, 3], [4, 5, 6]])
print(ary2)

ary3 = np.array([15, "Apple", True])
print(ary3)

# In[] Zero & Identity & Array

# Zero array (dtype = float)
zero1 = np.zeros((3,))
print(zero1)

zero2 = np.zeros((2, 3))
print(zero2)

# Identity Array
identity1 = np.eye(1)
print(identity1)

identity2 = np.eye(2)
print(identity2)

# In[] Constant Array

# All-One Array
one1 = np.ones((3,))
print(one1)

one2 = np.ones((2, 3))
print(one2)

# Constant Array
const1 = np.full((3,), 7)
print(const1)

const2 = np.full((2,3), 7)
print(const2)

# In[] Access Array Elements

# Read Elements
ary1 = np.array([[1, 2, 3], [4, 5, 6]])
print(ary1[0, 0], ary1[1, 2])

# Write Elements
ary1[0, 0] = 100
ary1[1, 2] = 600
print(ary1)

# In[] Access Array Information

# Read Array Information
ary1 = np.array([[1, 2, 3], [4, 5, 6]])
print(type(ary1), ary1.ndim, ary1.shape, ary1.dtype)

# In[] Samples Generation

# Generated by Sequence
sample1 = np.arange(0., 5., 0.2)
print(sample1)

# Generated by Sequence + Shuffle
sample1 = np.arange(0., 5., 0.2)
np.random.shuffle(sample1)
print(sample1)

# Change Dimention (Reshape)
sample1 = np.arange(0., 5., 0.2)
print(sample1.reshape(5, 5))

# Change Data Type (astype)
sample1 = np.arange(0., 5., 0.2)
sample1 = sample1.astype("unicode")
print(sample1)

# Generated by Linear Space
sample1 = np.linspace(0., 5., 5)
print(sample1)

# Generated by Exponential Space
sample1 = np.logspace(0., 5., 5)
print(sample1)

# Generated by Random Integers (Dice Example)
sample2 = np.random.randint(1, 7, size=15)
print(sample2)

# Generated by Random Floating Points (2x3 Dimentions)
sample3 = np.random.rand(2, 3)
print(sample3)

# Generated by Random Choices (4 Weeks Weather for 3 Cities)
weather = ["Sunny", "Cloudy", "Raining", "Windy"]
Taipei = np.random.choice(weather, size=(4, 7), replace=True, p=[0.2, 0.5, 0.2, 0.1])
print(Taipei)
Hsinchu = np.random.choice(weather, size=(4, 7), replace=True, p=[0.3, 0.1, 0.1, 0.5])
print(Hsinchu)
Kaohsiung = np.random.choice(weather, size=(4, 7), replace=True, p=[0.6, 0.1, 0.1, 0.2])
print(Kaohsiung)

# Generated by Normal Distribution
normal1 = np.random.randn(3, 5)
print(normal1)

normal2 = np.random.normal(10, 2, size=(3, 5))
print(normal2)

# In[] Unique elements

# Through a Dice for 15 times
dice1 = np.random.randint(1, 7, size=15)
print(dice1)

# Get Unique elements
unique1 = np.unique(dice1)
print(unique1)

# Get Unique Elements + Counts
unique1, count1 = np.unique(dice1, return_counts=True)
print(unique1, count1)
print(dict(zip(unique1, count1)))

# In[] Slicing
slice1 = np.random.randint(20, size=20)
print(slice1)
print(slice1[:5])

slice2 = np.random.randint(20, size=(5, 5))
print(slice2)
print(slice2[:3, :3])

# In[] Statistics
stat1 = np.arange(1, 11)
print(stat1)

print(stat1.min())
print(stat1.max())
print(stat1.sum())
print(stat1.mean())
print(stat1.std())

# In[] Array Operations
X1 = np.array([1, 2, 3])
X2 = np.array([20, 36, 40])

print(np.negative(X1))
print(np.add(X1, X2))
print(np.subtract(X1, X2))

print(np.multiply(X1, X2))
print(np.dot(X1, X2))
print(np.inner(X1, X2))
print(np.cross(X1, X2))
print(np.outer(X1, X2))

print(np.divide(X1, X2))
print(np.remainder(X1, X2))

X = np.array([[1, 2], [3, 4]])
Y = np.linalg.inv(X)
print(np.dot(X, Y))

features = np.concatenate((X1, X2)).reshape(2, 3).T
print(features)

# In[] Rounding
num1 = np.array([-1.67, -1.01, -0.35, 0.97, 1.63])
print(num1)

print(np.around(num1, decimals=1))
print(np.floor(num1))
print(np.ceil(num1))

# In[] Exponents Functions
x1 = np.arange(1.0, 10.0, 1.0).reshape(3, 3)
print(x1)

print(np.power(x1, x1))
print(np.exp2(x1))
print(np.exp(x1))
print(np.sqrt(x1))

# In[]  logarithm Functions
x1 = np.arange(2, 20, 2).reshape(3, 3)
print(x1)

print(np.log10(x1))
print(np.log2(x1))
print(np.log(x1))

# In[] Trigonometric functions
deg = np.array([0, 30, 60, 90])
rad = np.deg2rad(deg)
print(np.rad2deg(rad))

print(np.sin(rad))
print(np.cos(rad))
print(np.tan(rad))

